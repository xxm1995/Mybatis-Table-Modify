<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bootx.mybatis.table.modify.impl.mysql.mapper.MySqlTableModifyMapper">

    <!-- 强制指定查询表结构映射字段，避免被mybatis下划线转驼峰配置影响，导致查询不到值  -->
    <!-- =行信息 -->
    <resultMap id="MysqlColumnsResultMap" type="cn.bootx.mybatis.table.modify.impl.mysql.entity.MysqlTableColumn">
        <result property="tableSchema" column="table_schema"/>
        <result property="tableName" column="table_name"/>
        <result property="columnName" column="column_name"/>
        <result property="ordinalPosition" column="ordinal_position"/>
        <result property="columnDefault" column="column_default"/>
        <result property="isNullable" column="is_nullable"/>
        <result property="dataType" column="data_type"/>
        <result property="characterMaximumLength" column="character_maximum_length"/>
        <result property="characterOctetLength" column="character_octet_length"/>
        <result property="numericPrecision" column="numeric_precision"/>
        <result property="numericScale" column="numeric_scale"/>
        <result property="characterSetName" column="character_set_name"/>
        <result property="collationName" column="collation_name"/>
        <result property="columnType" column="column_type"/>
        <result property="columnKey" column="column_key"/>
        <result property="extra" column="extra"/>
        <result property="privileges" column="privileges"/>
        <result property="columnComment" column="column_comment"/>
    </resultMap>
    <!-- 表信息 -->
    <resultMap id="MysqlTableResultMap" type="cn.bootx.mybatis.table.modify.impl.mysql.entity.MySqlTableInfo">
        <result property="tableCatalog" column="table_catalog"/>
        <result property="tableSchema" column="table_schema"/>
        <result property="tableName" column="table_name"/>
        <result property="tableType" column="table_type"/>
        <result property="engine" column="engine"/>
        <result property="version" column="version"/>
        <result property="rowFormat" column="row_format"/>
        <result property="tableRows" column="table_rows"/>
        <result property="avgRowLength" column="avg_row_length"/>
        <result property="dataLength" column="data_length"/>
        <result property="maxDataLength" column="max_data_length"/>
        <result property="indexLength" column="index_length"/>
        <result property="dataFree" column="data_free"/>
        <result property="autoIncrement" column="auto_increment"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="checkTime" column="check_time"/>
        <result property="tableCollation" column="table_collation"/>
        <result property="checksum" column="checksum"/>
        <result property="createOptions" column="create_options"/>
        <result property="tableComment" column="table_comment"/>
    </resultMap>

    <!-- 索引信息 -->
    <resultMap id="MysqlIndexResultMap" type="cn.bootx.mybatis.table.modify.impl.mysql.entity.MySqlTableIndex">
        <result property="indexName" column="index_name"/>
        <result property="indexType" column="index_type"/>
        <result property="indexComment" column="index_comment"/>
        <result property="columnName" column="column_name"/>
        <result property="nonUnique" column="non_unique"/>
        <result property="seqInIndex" column="seq_in_index"/>
    </resultMap>

    <!-- 抽取出来的公共部分 -->
    <sql id="commonSql">
        <if test="fields.fileTypeLength == 0">
            `${fields.fieldName}` ${fields.fieldType}
        </if>
        <if test="fields.fileTypeLength == 1">
            `${fields.fieldName}` ${fields.fieldType}(${fields.fieldLength})
        </if>
        <if test="fields.fileTypeLength == 2">
            `${fields.fieldName}`
            ${fields.fieldType}(${fields.fieldLength},${fields.fieldDecimalLength})
        </if>
        <if test="fields.fieldIsNull">
            NULL
        </if>
        <if test="!fields.fieldIsNull">
            NOT NULL
        </if>
        <if test="fields.fieldIsAutoIncrement">
            AUTO_INCREMENT
        </if>
        <!-- 不是自增长的才能有默认值 -->
        <!-- 并且不为null时，因为null是默认的没必要写 -->
        <if test="!fields.fieldIsAutoIncrement and !fields.fieldIsNull and fields.fieldDefaultValue != null">
            <if test="fields.fieldType == 'bit' and !fields.fieldDefaultValueNative">
                <if test="fields.fieldDefaultValue == 'true'.toString()">
                    DEFAULT 1
                </if>
                <if test="fields.fieldDefaultValue == 'false'.toString()">
                    DEFAULT 0
                </if>
                <if test="fields.fieldDefaultValue == '1'.toString()">
                    DEFAULT 1
                </if>
                <if test="fields.fieldDefaultValue == '0'.toString()">
                    DEFAULT 0
                </if>
            </if>
            <if test="fields.fieldType == 'bit' and fields.fieldDefaultValueNative">
                DEFAULT ${fields.fieldDefaultValue}
            </if>
            <if test="fields.fieldType != 'bit'">
                <if test="fields.fieldDefaultValueNative">
                    DEFAULT ${fields.fieldDefaultValue}
                </if>
                <if test="!fields.fieldDefaultValueNative">
                    DEFAULT #{fields.fieldDefaultValue}
                </if>
            </if>
        </if>
        <!-- 不是自增长的才能有默认值 -->
        <!-- 允许是空时，并且默认值不是NUll -->
        <if test="!fields.fieldIsAutoIncrement and fields.fieldIsNull and fields.fieldDefaultValue != null">
            <if test="fields.fieldType == 'bit' and !fields.fieldDefaultValueNative">
                <if test="fields.fieldDefaultValue == 'true'.toString()">
                    DEFAULT 1
                </if>
                <if test="fields.fieldDefaultValue == 'false'.toString()">
                    DEFAULT 0
                </if>
                <if test="fields.fieldDefaultValue == '1'.toString()">
                    DEFAULT 1
                </if>
                <if test="fields.fieldDefaultValue == '0'.toString()">
                    DEFAULT 0
                </if>
            </if>
            <if test="fields.fieldType == 'bit' and fields.fieldDefaultValueNative">
                DEFAULT ${fields.fieldDefaultValue}
            </if>
            <if test="fields.fieldType != 'bit'">
                <if test="fields.fieldDefaultValueNative">
                    DEFAULT ${fields.fieldDefaultValue}
                </if>
                <if test="!fields.fieldDefaultValueNative">
                    DEFAULT #{fields.fieldDefaultValue}
                </if>
            </if>
        </if>
        <if test="fields.fieldComment != ''">
            COMMENT #{fields.fieldComment}
        </if>
    </sql>

    <!-- 创建表 -->
    <update id="createTable"  parameterType="cn.bootx.mybatis.table.modify.impl.mysql.entity.MySqlCreateParam">
        <!-- 表名-->
        create table `${table.name}`
        <trim prefix="set" suffixOverrides=",">
            <!-- 行 -->
            <foreach collection="table.columns" item="column" separator=",">
                `${column}`
            </foreach>
            <!-- 主键索引 -->
            <if test="table.engine != null and table.engine != null">
                PRIMARY KEY ${keys} USING BTREE,
            </if>
            <!-- 索引 -->
            <foreach collection="table.indexes" item="index" separator=",">
                `${index}`
            </foreach>
            <!-- 表信息 引擎-->
            <if test="table.engine != null and table.engine != ''">
                ENGINE = #{table.engine},
            </if>
            <!-- 表信息 字符集-->
            <if test="table.charset != null and table.charset != ''">
                CHARSET = #{table.charset},
            </if>
            <!-- 表信息 备注-->
            <if test="table.comment != null and table.comment != ''">
                COMMENT = #{table.comment},
            </if>
        </trim>
        ;
    </update>

    <!-- 更新表 -->
    <update id="modifyTable"  parameterType="cn.bootx.mybatis.table.modify.impl.mysql.entity.MySqlModifyParam">
        <!-- 表名-->
        alter table `${table.name}`
        <trim prefix="set" suffixOverrides=",">
            <!-- 删除行 -->
            <foreach collection="table.dropColumns" item="column" separator=",">
                DROP COLUMN `${column}`
            </foreach>
            <!-- 修改行 -->
            <foreach collection="table.modifyColumns" item="column" separator=",">
                MODIFY COLUMN `${column}`
            </foreach>
            <!-- 新增行 -->
            <foreach collection="table.addColumns" item="column" separator=",">
                ADD COLUMN `${column}`
            </foreach>
            <!-- 主键索引 -->
            <if test="table.keys != null and table.keys != ''">
                DROP PRIMARY KEY,
                ADD PRIMARY KEY ${table.keys} USING BTREE,
            </if>
            <!-- 删除索引 -->
            <foreach collection="table.dropIndexes" item="index" separator=",">
                `${index}`
            </foreach>
            <!-- 新增索引 -->
            <foreach collection="table.addIndexes" item="index" separator=",">
                `${index}`
            </foreach>
            <!-- 表信息 引擎-->
            <if test="table.engine != null and table.engine != ''">
                ENGINE = #{table.engine},
            </if>
            <!-- 表信息 字符集-->
            <if test="table.charset != null and table.charset != ''">
                CHARSET = #{table.charset},
            </if>
            <!-- 表信息 备注-->
            <if test="table.commentUpdate == null">
                COMMENT = '#{table.comment}',
            </if>
        </trim >
        ;
    </update>

    <!-- 验证表是否存在 -->
    <select id="existsByTableName" resultType="boolean" parameterType="String">
        select count(*) from information_schema.tables
        where table_name = #{tableName} and table_schema = (select database())
    </select>

    <!-- 根据表名查询库中该表的结构等信息 -->
    <select id="findTableByTableName" resultMap="MysqlTableResultMap">
        select * from information_schema.tables
        where table_name = #{tableName} and table_schema = (select database())
    </select>

    <!-- 根据表名查询库中该表的字段结构等信息 -->
    <select id="findColumnByTableName" resultMap="MysqlColumnsResultMap" parameterType="String">
        select * from information_schema.columns where table_name = #{tableName} and table_schema = (select database())
    </select>

    <!-- 增加字段 -->
    <select id="addTableField" parameterType="java.util.Map">

        <foreach collection="tableMap" mySqlIndex="key" item="fields" separator=";">
            alter table `${key}` add
            <include refid="commonSql"></include>
            <if test="fields.fieldIsKey">
                PRIMARY KEY
            </if>
        </foreach>

    </select>

    <!-- 删除字段 -->
    <select id="removeTableField" parameterType="java.util.Map">
        <foreach collection="tableMap" mySqlIndex="key" item="field" separator=";">
            alter table `${key}` drop `${field}`
        </foreach>
    </select>

    <!-- 更新表属性 -->
    <select id="modifyTableProperty" parameterType="java.util.Map">
        <foreach collection="tableMap" mySqlIndex="key" item="value">
            alter table `${key}`
            <foreach collection="value.map" mySqlIndex="ckey" item="cvalue">
                <if test="ckey == 'table_comment'">
                    COMMENT  #{cvalue}
                </if>
                <if test="ckey == 'table_collation'">
                    CHARSET  #{cvalue}
                </if>
                <if test="ckey == 'engine'">
                    ENGINE  #{cvalue}
                </if>
            </foreach>
            ;
        </foreach>
    </select>

    <!-- 修改字段 -->
    <select id="modifyTableField" parameterType="java.util.Map">

        <foreach collection="tableMap" mySqlIndex="key" item="fields" separator=";">
            alter table `${key}` modify
            <include refid="commonSql"></include>
            <if test="fields.fieldIsKey">
                PRIMARY KEY
            </if>
        </foreach>

    </select>


    <!-- 删除主键字段 -->
    <select id="dropKeyTableField" parameterType="java.util.Map">

        <foreach collection="tableMap" mySqlIndex="key" item="fields" separator=";">
            alter table `${key}` modify
            <include refid="commonSql"></include>
            ,drop primary key
        </foreach>

    </select>

    <!-- 删除表 -->
    <select id="dropTableByName" parameterType="String">
        DROP TABLE IF EXISTS `${tableName}`;
    </select>

    <!-- 查询当前表存在的索引, 排除主键索引primary -->
    <select id="findIndexByTableName" resultMap="MysqlIndexResultMap" parameterType="string">
        select index_name,index_type,index_comment,column_name,non_unique,seq_in_index from information_schema.statistics
        where table_schema = (select database()) and lower(index_name) !='primary'
        and table_name = #{tableName}
    </select>

    <!-- 查询当前表存在的主键索引primary -->
    <select id="findPrimaryIndexByTableName" resultMap="MysqlIndexResultMap" parameterType="string">
        select index_name,index_type,index_comment,column_name,non_unique,seq_in_index from information_schema.statistics
        where table_schema = (select database()) and lower(index_name) ='primary'
          and table_name = #{tableName}
    </select>

    <!-- 删除索引 -->
    <select id="dropTableIndex" parameterType="java.util.Map">
        <foreach collection="tableMap" mySqlIndex="tableName" item="indexName">
            DROP INDEX `${indexName}` on `${tableName}`
        </foreach>
    </select>

    <!-- 创建索引 -->
    <select id="addTableIndex" parameterType="java.util.Map">

        <foreach collection="tableMap" mySqlIndex="tableName" item="fields" separator=";">
            CREATE INDEX ${fields.filedIndexName}
            ON `${tableName}` (
            <foreach collection="fields.filedIndexValue" mySqlIndex="mySqlIndex" item="columnName">
                <if test="fields.filedIndexValue.size == 1">
                    ${columnName}
                </if>
                <if test="fields.filedIndexValue.size > 1">
                    ${columnName}
                    <if test="fields.filedIndexValue.size != mySqlIndex + 1">
                        ,
                    </if>
                </if>
            </foreach>
            )
        </foreach>

    </select>

    <!-- 创建唯一约束 -->
    <select id="addTableUnique" parameterType="java.util.Map">

        <foreach collection="tableMap" mySqlIndex="tableName" item="fields" separator=";">
            CREATE UNIQUE INDEX ${fields.filedUniqueName}
            ON `${tableName}` (
            <foreach collection="fields.filedUniqueValue" mySqlIndex="mySqlIndex" item="columnName">
                <if test="fields.filedUniqueValue.size == 1">
                    ${columnName}
                </if>
                <if test="fields.filedUniqueValue.size > 1">
                    ${columnName}
                    <if test="fields.filedUniqueValue.size != mySqlIndex + 1">
                        ,
                    </if>
                </if>
            </foreach>
            )
        </foreach>

    </select>

</mapper>
